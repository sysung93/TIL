객체지향의 성격
    추상성 - 클래스의 내부가 추상화 되어서 외부사용자는 내부의 자세항 사항을 몰라도 사용이 가능 한 성격을 말한다.
            Scanner, ArrayList, String 등 실제로 내부에 어떤 데이터가 있고 어떻게 작동되는지 몰라도
            사용에 지장이 없다. 추상화가 될수록 사용자는 편하고 만드는 사람은 힘들다

    은닉성(캡슐화) - 클래스 내부의 데이터를 보호하여 외부로부터 잘못된 값이 들어가지 않도록 한다.
                    그래서 접근권한을 만들었다.
                    접근권한은 private, protected, public 이 있는데 private는 클래스 내부에서만 접근 가능
                    protected 도 클래스 내부에서만 접근이 가능한데 private 와의 차이점은 상속이 된다는 부분에서 다르다
                    public은 누구나 사용가능한 접근 방법이다. 보통 변수는 private 이고 함수는 public 인데
                    반드시 그렇게ㅔ 해야만 하는건 아니고 변수도 public이 될수 있고 함소도 private로 만들 수 있다

    상속성 - 기존에 만들어 놓은 클래스를 이용해 새로 클래스를 정의할 수 있다.
            코드의 재사용성을 높이고, 프레임 워크등을 만들 때 사용 하는 원리

    다형성 - overloading 과 overriding 두 가지가 있다.
            이름이 같은데 형태가 다른 성격을 다형성이라고 한다
            언어에 따라서 동일한 이름의 함수를 만들 수 없는 경우도 있다.
            자바는 이름이 같은데 매개변수가 다른 함수를 만들 수 있다.
            이걸 overloading 이라고한다
            overriding은 상속관계에서 부모한테 있는 함수를 다시 정의하는 것을 말한다
            부모클래스에 있는 함수가 마음에 안들면 다시 만들면 된다.
            그러면 내 함수를 사용할 수 있고 이걸 overriding이라고 한다.
            자바의 모든 클래스는 object의 자손이다.